module.exports.config = {
  name: "cummah",
  version: "1.0.0",
  permission: 0,
  credits: "Sakib Vai",
  description: "ржЙржорзНржорж╛рж╣ ржмрж╛рж░рзНрждрж╛ ржУ reply delete",
  prefix: true,
  category: "fun",
  usages: "@mention",
  cooldowns: 5,
};

const repliedUsers = new Map();

module.exports.run = async function ({ api, event }) {
  const { threadID, messageID, mentions } = event;

  if (!Object.keys(mentions).length) {
    return api.sendMessage("тЭМ ржЖржЧрзЗ ржХрж╛ржЙржХрзЗ ржорзЗржирж╢ржи ржХрж░рзЛред", threadID, messageID);
  }

  const mentionID = Object.keys(mentions)[0];
  const mentionName = mentions[mentionID];
  const tag = { tag: mentionName, id: mentionID };

  const messages = [
  `@ рждрзБржорж╛рж░ ржЧрж╛рж▓рзЗ ржЙржорзНржорж╛рж╣ ЁЯШШ`,
  `@ рждрзБржорж╛рж░ ржарзЛржБржЯрзЗ ржЙржорзНржорж╛рж╣ ЁЯШЪ`,
  `@ рждрзБржорж╛рж░ ржЙржкрж░рзЗ ржЙржорзНржорж╛рж╣ ЁЯШН`,
  `@ рждрзБржорж╛рж░ ржХржкрж╛рж▓рзЗ ржЙржорзНржорж╛рж╣ ЁЯе░`,
  `@ рждрзБржорж╛рж░ ржЧрж▓рж╛рзЯ ржЙржорзНржорж╛рж╣ ЁЯШШ`,
  `@ рждрзБржорж╛рж░ ржЪрзЛржЦрзЗ ржЙржорзНржорж╛рж╣ ЁЯШМ`,
  `@ рждрзБржорж╛рж░ рж╣рзГржжржпрж╝рзЗ ржЙржорзНржорж╛рж╣ тЭдя╕П`,
  `@ рждрзБржорж╛рж░ ржирж╛ржХрзЗ ржЙржорзНржорж╛рж╣ ЁЯТЛ`,
  `@ рждрзБржорж╛рж░ рж╣рж╛рждрзЗрж░ рждрж╛рж▓рзБрждрзЗ ржЙржорзНржорж╛рж╣ ЁЯд▓`,
  `@ рждрзБржорж╛рж░ ржХрж╛ржирзЗ ржЙржорзНржорж╛рж╣ ЁЯСВЁЯШШ`,
  `@ рждрзБржорж╛рж░ ржЧрж╛рж▓рзЗрж░ ржбрж┐ржорзНржкрж▓рзЗ ржЙржорзНржорж╛рж╣ ЁЯШ│`,
  `@ рждрзБржорж╛рж░ ржЪрж┐ржирж┐рждрзЗ ржЙржорзНржорж╛рж╣ ЁЯШЛ`,
  `@ рждрзБржорж╛рж░ ржХрзЛржорж░рзЗ ржЙржорзНржорж╛рж╣ ЁЯФе`,
  `@ рждрзБржорж╛рж░ ржкрж┐ржарзЗ ржЙржорзНржорж╛рж╣ ЁЯТЮ`,
  `@ рждрзБржорж╛рж░ ржШрж╛рзЬрзЗ ржЙржорзНржорж╛рж╣ ЁЯШИ`,
  `@ рждрзБржорж╛рж░ ржмрзБржХрзЗрж░ ржмрж╛ржорзЗ ржЙржорзНржорж╛рж╣ ЁЯТУ`,
  `@ рждрзБржорж╛рж░ ржмрзБржХрзЗрж░ ржбрж╛ржирзЗ ржЙржорзНржорж╛рж╣ ЁЯТЧ`,
  `@ рждрзБржорж╛рж░ ржкрж╛рзЯрзЗрж░ ржЖржЩрзБрж▓рзЗ ржЙржорзНржорж╛рж╣ ЁЯж╢ЁЯТЛ`,
  `@ рждрзБржорж╛рж░ рж╣рзГржжрзЯрзЗрж░ ржЧржнрзАрж░рзЗ ржЙржорзНржорж╛рж╣ ЁЯлА`,
  `@ рждрзБржорж╛рж░ ржЖрждрзНржорж╛рзЯ ржЙржорзНржорж╛рж╣ ЁЯС╗тЭдя╕П`,
  `@ рждрзБржорж╛рж░ рж╢рзНржмрж╛рж╕рзЗ ржЙржорзНржорж╛рж╣ ЁЯШотАНЁЯТи`,
  `@ рждрзБржорж╛рж░ ржХрж▓рзНржкржирж╛рзЯ ржЙржорзНржорж╛рж╣ ЁЯдд`,
  `@ рждрзБржорж╛рж░ ржЫрж╛рзЯрж╛рзЯ ржЙржорзНржорж╛рж╣ ЁЯМС`,
  `@ рждрзБржорж╛рж░ рж╕ржм ржХржерж╛рзЯ ржЙржорзНржорж╛рж╣ ЁЯОдЁЯТЛ`,
];

  // Send ржЙржорзНржорж╛рж╣ messages one by one
  for (let i = 0; i < messages.length; i++) {
    await new Promise(resolve => setTimeout(resolve, 1500));
    api.sendMessage({
      body: messages[i],
      mentions: [tag]
    }, threadID);
  }

  // Save target for this thread
  repliedUsers.set(threadID, mentionID);

  // Setup listener only once
  if (!global._cummahReplyHandlerSet) {
    global._cummahReplyHandlerSet = true;

    api.listenMqtt((callbackEvent) => {
      const { senderID, threadID, messageID } = callbackEvent;

      if (repliedUsers.has(threadID)) {
        const targetID = repliedUsers.get(threadID);

        if (senderID === targetID) {
          // Delete user's message
          api.unsendMessage(messageID, (err) => {
            if (!err) {
              api.sendMessage(
                "ЁЯдл ржХржерж╛ ржмржЗрж▓рзЛржирж╛! рж╢рж╛ржХрж┐ржм ржнрж╛ржЗ рждрзБржорж╛ржХрзЗ ржЙржорзНржорж╛рж╣ ржжрж┐рждрзЗ ржмрж▓ржЫрзЗ рждрж╛рж░ ржкржХрзНрж╖ ржерзЗржХрзЗ ЁЯШШ",
                threadID
              );
            }
          });

          repliedUsers.delete(threadID); // Prevent repeated triggers
        }
      }
    });
  }
};
